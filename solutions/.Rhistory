g <- g + geom_ribbon(aes(ymin=lwr, ymax=upr,  fill=interval), alpha = 0.2)
g
g <- g + geom_line()
g
g <- g + geom_point(data=data.frame(x=x,y=y), aes(x=x,y=y), size=5)
g
h <- ggplot(dat, aes(x=x,y=y))
h <- h + geom_ribbon(aes(ymin=lwr, ymax=upr,  fill=interval), alpha = 0.2)
h <- h + geom_line()
h <- h + geom_point(dat, aes(x=x,y=y), size=4)
head(diamond)
data.frame(x=x,y=y)
h<-h+geom_point(data=data.frame(x=x,y=y), aes(x=x,y=y), size=4)
h
x
p1
predict(fit, newdata=newx, interval='confidence')
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(y~x)
summary(fit)$coef
n <- length(y)
sigma <- sqrt(sum(resid(fit))^2/(n-2))
sigma
sigma <- sqrt(sum(resid(fit)^2)/(n-2))
sigma
resid(fit)
e <- (resid(fit))^2
0.223^1
0.223^2
sigma2 <- sqrt(sum(e)/(n-2))
sigma2
e <- resid(fit)
sigma <- sqrt(sum(e^2)/(n-2))
sigma
data(mtcars)
fit <- lm(mtcars$mpg ~ mtcars$wt)
fit
summary(fit)
str(fit)
nrow(mtcars)
mean(mtcars$wt)
mn_wt <- mean(mtcars$wt)
newx <- data.frame(x = mn_wt)
newx
pt1 <- data.frame(predict(fit, newdata=newx), interval='confidence')
p1
pt1
p1 <- data.frame(predict(fit, newdata=newx, interval='confidence'))
p1
newx
mean(mtcars$wt)
newx <- data.frame(x = seq(mean(x), max(x), length=32))
pt1 <- data.frame(predict(fit, newdata = newx, interval='confidence'))
pt1
pt1$x <- newx$x
pt1
mean(x)
x <- mtcars$wt
y <- mtcars$mpg
fit <- lm(mtcars$mpg~mtcars$wt)
newx <- data.frame(seq(mean(x), max(x), length=32))
pt1 <- data.frame(predict(fit, newdata=newx,interval='confidence'))
pt1$x <- newx[1]
pt1
newx <- data.frame(x=seq(min(x), max(x), length=32))
pt1 <- data.frame(predict(fit, newdata=newx, interval='confidence'))
pt1$x <- newx$x
pt1
mean(mtcars$wt)
min(mtcars$wt)
?predict
pt2 <- data.frame(predict(fit, newdata=newx, interval='prediction'))
pt2
pt2$x <- newx$x
pt2
summary(fit)
names(pt1)[1] <- 'y'
pt1
g <- ggplot(pt1, aes(x=x,y=y))
g <- g + geom_ribbon(aes(ymin=lwr, ymax=upr), alpha=0.2)
g <- g + geom_line()
g
g <- g + geom_point(data=data.frame(x=x,y=y), aes(x=x,y=y), size=4)
g
plot(mtcars$wt, mtcars$mpg)
fit <- lm(mtcars$mpg~mtcars$wt)
abline(fit, lwd=2)
abline(v=mean(mtcars$wt))
x
x <- mtcars$wt
y <- mtcars$mpg
n <- length(y)
fit <- lm(y~x)
newx <- data.frame(x=seq(min(x), max(x), length=100))
p1 <- data.frame(predict(fit, newdata=newx, interval='confidence'))
p2 <- data.frame(predict(fit, newdata=newx, interval='prediction'))
p1$interval <- 'confidence'
p2$interval <- 'prediction'
p1$x <- newx$x
p2$x <- newx$x
dat <- rbind(p1,p2)
names(dat)[1] <- 'y'
g <- ggplot(dat, aes(x=x,y=y))
g <- g + geom_ribbon(aes(ymin=lwr, ymax=upr,fill=interval), alpha=0.2)
g <- g + geom_line()
g <- g + geom_point(data=data.frame(x=x,y=y), aes(x=x,y=y), size=4)
g
predict(fit, newdata=mean(mtcars$wt))
predict(fit, newdata=data.frame(mean(mtcars$wt)))
data(Air)
predict(fit, newdata=data.frame(weight=c(mean(mtcars$wt))))
predict(fit, newdata=data.frame(weight=c(mean(mtcars$wt))), se.fit=TRUE)
fit <- lm(mpg~wt, data=mtcars)
fit
predict(fit,newdata=data.frame(weight=mean(mtcar$wt)))
predict(fit,newdata=data.frame(weight=mean(mtcars$wt)))
predict(fit,newdata=data.frame(weight=mean(wt), data=mtcars))
data(mtcars)
new.df <- data.frame(wt=c(mean(mtcars$wt)))
predict(fit, new.df)
predict(fit, data.frame(wt=c(mean(mtcars$wt))))
predict(fit, data.frame(wt=c(mean(mtcars$wt))), interval='confidence'  )
?mtcars
fit
fit2 <- lm(mpg ~ wt*1000, data=mtcars)
fit2 <- lm(mpg ~ I(wt*1000), data=mtcars)
fit2
fit1 <- lm(mpg~wt-1, data=mtcars)
fit2 <- lm(mpg~wt, data=mtcars)
e1 <- resid(fit1)
e2 <- resid(fit2)
sum(e2^2)/sum(e1^2)
fit1 <- lm(mpg~1, data=mtcars)
e1 <- resid(fit1)
sum(e2^2)/sum(e1^2)
fit <- lm(mpg~I(wt*1000), data=mtcars)
predict(fit, newdata=data.frame(wt=c(3000)), interval='prediction')
fit
predict(fit)
coef(fit)
fit <- lm(mpg~wt, data=mtcars)
fit
predict(fit)
predict(fit, newdata=data.frame(weight=c(mean(mtcars$wt)), interval='prediction')
)
predict(fit, data.frame(weight=c(mean(mtcars$wt)), interval='prediction'))
predict(fit, data.frame(wt=c(mean(mtcars$wt)), interval='prediction'))
predict(fit, data.frame(wt=c(mean(mtcars$wt)), interval='confidence'))
fit
predict(fit, data.frame(wt=c(mean(mtcars$wt))), interval='confidence')
predict(fit, data.frame(wt=c(mean(mtcars$wt))), interval='prediction')
predict(fit, data.frame(wt=c(3)), interval='prediction')
fit_new <- lm(mpg~I(wt*1000), data=mtcars)
predict(fit_new, data.frame(wt=c(3000)), interval='prediction')
predict(fit_new, interval='prediction')
mean(mtcars$wt)
predict(fit_new, data.frame(wt=c(3)), interval='prediction')
predict(fit, data.frame(wt=c(3)), interval='prediction')
fit_new
fit
coef(fit_new)
coef(fit)
head(mtcars)
predict(fit
)
fit
fit <- lm(mpg~wt,data=mtcars)
summary(fit)$coefficients
sumCoef <- summary(fit)$coefficients
sumCoef[2,1] + c(-1,1)*qt(0.975,df=fit$df)*sumCoef[2,2]
-6.486308/2
-6.486308*2
n <- 100
x <- rnorm(n)
x2 <- rnorm(n)
x3 <- rnorm(n)
y <- x + x2 + x3 + rnorm(n, sd=0.1)
fit <- lm(y~x)
fit <- lm(y~x+x2+x3)
fit
resid_y_x2_x3 <- resid(lm(y~x2+x3))
resid_x_x2_X3 <- resid(lm(x~x2+x3))
beta1 <- sum(resid_y_x2_x3 * resid_x_x2_X3)/(sum(resid_x_x2_X3^2))
beta1
fit
resid_y_x1_x3 <- resid(lm(y~x+x3))
resid_x2_x1_x3 <- resid(lm(x2~ x1 + x3))
resid_x2_x_x3 <- resid(lm(x2~ x + x3))
beta2 <- sum(resid_y_x1_x3*resid_x2_x_x3)/sum(resid_x2_x_x3^2)
beta2
coef(lm(y~x+x2+x3))
coef(lm(y~x+x2+x3-`))
)
;
coef(lm(y~x+x2+x3-1))
resid_y_x1_x3 <- resid(lm(y~x+x3-1))
resid_x2_x1_x3 <- resid(lm(x2~ x1 + x3-1))
resid_x2_x1_x3 <- resid(lm(x2~ x + x3-1))
beta2 <- sum(resid_y_x1_x3*resid_x2_x1_x3)/sum(resid_x2_x1_x3^2)
beta2
resid_y_x2_x3 <- resid(lm(y~x2+x3-1))
resid_x1_x2_x3 <- resid(lm(x1~x2+x3-1))
resid_x1_x2_x3 <- resid(lm(x~x2+x3-1))
beta1 <- sum(resid_y_x2_x3*resid_x1_x2_x3)/sum(resid_x1_x2_x3^2)
beta1
fit <- lm(y~x+x2+x3-1)
coef(fit)
fit <- lm(y~x+x2+x3)
coef(fit)
coef(fit)[1]
fit <- lm(y~x+x2+x3-1)
coef(fit)[1]
beta1
data(mtcars)
fit <- lm(mpg~wt, data=mtcars)
predict(fit, data.frame(wt=c(mean(mtcars$wt))), interval='confidence')
predict(fit, data.frame(wt=c(3)), interval='confidence')
predict(fit, data.frame(wt=c(3)), interval='prediction')
y <- mtcars$mpg
x <- mtcars$wt
n <- length(y)
fit2 <- lm(y~I(x*1000))
fit2
predict(fit2, data.frame(wt=c(3000)), interval='prediction')
predict(fit2, data.frame(wt=c(3000)), interval='prediction')
fit
fit <- lm(mpg~wt, data=mtcars)
fit2 <- lm(mpg~I(wt*1000), data=mtcars)
predict(fit2, data.frame(wt=c(3000)), interval='prediction')
fit2
fit
3000*-0.005344
37.28-16.032
predict(fit, data.frame(wt=c(3)), interval='prediction')
fit2
predict(fit, data.frame(wt*1000=c(3000)), interval='prediction')
predict(fit2, data.frame(wt=c(3000)), interval='prediction')
predict(fit2, data.frame(wt=c(3)), interval='prediction')
predict(fit2, data.frame(c(3)), interval='prediction')
predict(fit2, data.frame(x=c(3)), interval='prediction')
predict(fit2, data.frame(wt=c(3)), interval='prediction')
fit <- lm(mpg~wt, data=mtcars)
predict(fit, data.frame(wt=c(3)), interval='prediction')
library(datasets)
data(swiss)
require(stats)
require(graphics)
pairs(swiss,panel=panel.smooth, main='Swiss data', col=3 + (swiss$Catholic > 50))
head(swiss)
?pairs
pairs(swiss,panel=panel.smooth, main='Swiss data', col=3 + (swiss$Catholic > 50))
swiss
8+10+12+12+12
54*2
7+8+9+10+11
8+9+12+12+12
8+9+10+12+12
12*20
?ave
x <- c(1,2,3)
y <- c(4,5,6)
ave(x,y)
y <- c('A', 'B', 'A')
ave(x,y)
y <- c('A', 'A', 'B')
ave(x,y)
data(InsectSprays)
ave(InsectSprays$count, InsectSprays$spray)
spray2 <- relevel(InsectSprays$spray, 'C')
spray2
data(swiss)
summary(lm(Fertility ~ ., data=swiss))
summary(lm(Fertility ~ ., data=swiss))$coef
summary(lm(Fertility ~ Agriculture + Examination + Education + Catholic + Infant.Mortality, data=swiss))
summary(lm(Fertility ~ ., data=swiss))$coef
summary(lm(Fertility ~ Agriculture + Examination + Education + Catholic + Infant.Mortality, data=swiss))$coef
?pairs
plot(swiss$Agriculture, swiss$Fertility, pch=19)
par(mfrow=c(2,1))
plot(swiss$Agriculture, swiss$Fertility, pch=19)
fit <- lm(Fertility ~ Agriculture, data=swiss)
abline(fit, lwd=2)
fit2 <- lm(Agriculture~Education, data=swiss)
fit3 <- lm(Fertility~Education, data=swiss)
plot(resid(fit2), resid(fit3), pch=19)
fit4<-lm(resid(lm(Fertility~Education, data=swiss)), resid(lm(Agriculture,Education, data=swiss))
)
fit4<-lm(resid(lm(Fertility~Education, data=swiss)), resid(lm(Agriculture~Education, data=swiss)))
fit4<-lm(resid(lm(Fertility~Education, data=swiss))~ resid(lm(Agriculture~Education, data=swiss)), data=swiss)
abline(fit4,lwd=2)
summary(fit4)$coef
summary(fit4)$coef
cor(swiss$Agriculture, swiss$Education)
cor(swiss$Fertility, swiss$Agriculture)
cor(swiss$Fertility, swiss$Education)
z <- swiss$Agriculture + swiss$Education
lm(Fertility~. + z, data=swiss)
z <- swiss$Agriculture
lm(Fertility ~ Education+Examination+z, data=swiss)
fit <- lm(Fertility~. + z, data=swiss)
summary(fit)$coef
fit
pbinom(7,8,0.5, lower.tail=FALSE)
data(InsectSprays)
unique(mean(InsectSprays$count))
summarize(InsectSprays$count, InsectSprays$spray)
summarize(InsectSprays$count, InsectSprays$spray, FUN=mean)
boxplot(InsectSprays$spray, InsectSprays$count)
?boxplot
boxplot(InsectSprays$count ~InsectSprays$spray)
par(mfrow=c(1,1))
boxplot(InsectSprays$count ~InsectSprays$spray)
boxplot(count ~spray, data=InsectSprays)
boxplot(count ~spray, data=InsectSprays, xlab='Some label')
boxplot(count ~spray, data=InsectSprays, xlab='Insect Spray', ylab='Insect count')
resid_y_all <- resid(lm(count~I(1*(spray=='C') + I(1*(spray=='D') + I(1*(spray=='E') + I(1*(spray=='F'))))
)
)
resid_y_all <- resid(lm(count~I(1*(spray=='C')) + I(1*(spray=='D')) + I(1*(spray=='E')) + I(1*(spray=='F'))))
resid_y_all <- resid(lm(count~I(1*(spray=='C')) + I(1*(spray=='D')) + I(1*(spray=='E')) + I(1*(spray=='F')), data=InsectSprays))
resid_y_all <- resid(lm(count~ I(1*(spray=='B'))+I(1*(spray=='C')) + I(1*(spray=='D')) + I(1*(spray=='E')) + I(1*(spray=='F')), data=InsectSprays))
resid_A_all <- resid(lm(I(1*(spray=='A'))~ I(1*(spray=='B'))+I(1*(spray=='C')) + I(1*(spray=='D')) + I(1*(spray=='E')) + I(1*(spray=='F')), data=InsectSprays))
beta1 <- sum(resid_y_all *resid_A_all )/sum(resid_A_all^2)
beta1
fit <- lm(count~.-1, data=InsectSprays)
fit
coef(fit)[1]
summary(lm(count ~
I(1 * (spray == 'B')) + I(1 * (spray == 'C')) +
I(1 * (spray == 'D')) + I(1 * (spray == 'E')) +
I(1 * (spray == 'F'))
,data=InsectSprays)
)
fit1 <-
lm(count ~
I(1 * (spray == 'B')) + I(1 * (spray == 'C')) +
I(1 * (spray == 'D')) + I(1 * (spray == 'E')) +
I(1 * (spray == 'F'))
, data = InsectSprays)
resid_all <- resid(fit1)
resid_all
fit2 <- lm(I(1 * (spray == 'A')) ~ I(1 * (spray == 'B')) + I(1 * (spray == 'C')) +
+            I(1 * (spray == 'D')) + I(1 * (spray == 'E')) +
+            I(1 * (spray == 'F'))
+        , data = InsectSprays))
fit2 <- lm(I(1 * (spray == 'A')) ~ I(1 * (spray == 'B')) + I(1 * (spray == 'C')) +
+            I(1 * (spray == 'D')) + I(1 * (spray == 'E')) +
+            I(1 * (spray == 'F'))
+        , data = InsectSprays)
fit2 <- lm(I(1*(spray=='A'))~ I(1 * (spray == 'B')) + I(1 * (spray == 'C')) +
I(1 * (spray == 'D')) + I(1 * (spray == 'E')) +
I(1 * (spray == 'F'))
, data = InsectSprays)
resid_A <- resid(fit2)
sum(resid_all * resid_A)/sum(resid_A^2)
resid_A
lm(count ~
I(1 * (spray == 'B')) + I(1 * (spray == 'C')) +
I(1 * (spray == 'D')) + I(1 * (spray == 'E')) +
I(1 * (spray == 'F')) + I(1 * (spray == 'A')), data = InsectSprays)
lm(count~., data=InsectSprays)
lm(count ~
I(1 * (spray == 'B')) + I(1 * (spray == 'C')) +
I(1 * (spray == 'D')) + I(1 * (spray == 'E')) +
I(1 * (spray == 'F')) + I(1 * (spray == 'A')), data = InsectSprays)
lm(count ~
I(1 * (spray == 'B')) + I(1 * (spray == 'C')) +
I(1 * (spray == 'D')) + I(1 * (spray == 'E')) +
I(1 * (spray == 'F')) + I(1 * (spray == 'A')), data = InsectSprays)$coef
lm(count~.,data=InsectSprays)
lm(count~.,data=InsectSprays)
n <- 100
x1 <- rnorm(n)
x2 <- rnorm(n)
x3 <- rnorm(n)
y <- x1+x2+x3+rnorm(n, sd=0.1)
lm(y~x1+x2+x3)
y <- x1+x2+x3
lm(y~x1+x2+x3)
y <- x1+x2+x3+rnorm(n, sd=0.1)
lm(y~x1+x2+x3)
lm(y~x1+x2+x3-1)
z <- x1+x2
fit <-lm(y~.+z)
fit <-lm(y~x1+x2+x3+z)
fit
unique(ave(InsectSprays$count, InsectSprays$spray))
summarize(InsectSprays$spray, InsectSprays$count, FUN=mean)
summarize(InsectSprays$count, InsectSprays$spray, FUN=mean)
unique(mean(InsectSprays$count, InsectSprays$spray))
unique(ave(InsectSprays$count, InsectSprays$spray))
lm(count~spray-1,data=InsectSprays)$coef
summary(lm(count~spray-1,data=InsectSprays))
pt(1.840,66)
pt(1.840,66, lower.tail=FALSE)
2.083/1.132
fit <- lm(count~spray-1,data=InsectSprays)
fit$df
pt(1.840,12, lower.tail=FALSE)
pt(1.840,20, lower.tail=FALSE)
sum(InsectSprays$spray=='C')
sum(InsectSprays$spray=='A')
sum(InsectSprays$spray=='B')
12*6
sum(InsectSprays$spray=='D')
sum(InsectSprays$spray=='E')
sum(InsectSprays$spray=='F')
nrow(InsectSprays)
pt(1.840,6,lower.tail=FALSE)
res <- resid(fit)
sqrt((1/66)*sum(res^2))
pt(4.343,66,lower.tail=FALSE)
2*pt(1.840,66,lower.tail=FALSE)
spray2 <- relevel(InsectSprays$spray, 'C')
spray2
?relevel
fit <- lm(Fertility~Agriculture + factor(CatholicBin), data=swiss)
swiss = mutate(swiss, CatholicBin = 1*(Catholic>50))
library(dplyr)
swiss = mutate(swiss, CatholicBin = 1*(Catholic>50))
swiss
fit <- lm(Fertility~Agriculture + factor(CatholicBin), data=swiss)
fit
g = ggplot(swiss, aes(x = Agriculture, y = Fertility, colour = factor(CatholicBin)))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("% in Agriculture") + ylab("Fertility")
g
g1 <- g
g1 <- g1 + geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2], size = 2)
g1 = g1 + geom_abline(intercept = coef(fit)[1] + coef(fit)[3], slope = coef(fit)[2], size = 2)
g1
g2 <- g
g1 <- g1 + geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2], size = 2)
g2 <- g2 + geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2], size = 2)
g2
g2 <- g + geom_abline(intercept = coef(fit)[1] + coef(fit)[3], slope = coef(fit)[2], size = 2)
g2
mean(swiss$Agriculture[swiss$CatholicBin==1])
mean(swiss$Fertility[swiss$CatholicBin==1])
plot(swiss$Agriculture, swiss$Fertility, pch=19)
plot(swiss$Agriculture, swiss$Fertility, pch=19, fill=swiss$CatholicBin)
plot(swiss$Agriculture, swiss$Fertility, pch=19, colour=swiss$CatholicBin)
plot(swiss$Agriculture, swiss$Fertility, pch=19, col=swiss$CatholicBin)
plot(swiss$Agriculture, swiss$Fertility, pch=19, col=ifelse(swiss$CatholicBin==1, 'red', 'black')
)
abline(fit, lwd=2)
plot(swiss$Agriculture, swiss$Fertility, pch=19, col=ifelse(swiss$CatholicBin==1, 'red', 'black')
)
fit$fitted
fit
summary(fit)
str(fit)
colorrs
colors
color
colors()
plot(swiss$Agriculture, swiss$Fertility, pch=19, colour=((swiss$CatholicBin)*1+1))
plot(swiss$Agriculture, swiss$Fertility, pch=19, col=((swiss$CatholicBin)*1+1))
plot(swiss$Agriculture, swiss$Fertility, pch=19, col=1)
plot(swiss$Agriculture, swiss$Fertility, pch=19, col=2)
1970*-0.2934
603.5058-577.998
data(mtcars)
str(mtcars)
?mtcars
nrow(mtcars)
nrow(mtcars[mtcars$am==0])
nrow(mtcars[mtcars$am==0,])
nrow(mtcars[mtcars$am==1,])
mean(mtcars$mpg[mtcars$am==0,])
mean(mtcars$mpg[mtcars$am==0])
mean(mtcars$mpg[mtcars$am==1])
levels(mtcars$am)
mtcars$am
?kmeans
?tryCatch
tryCatch(1, finally= print('hello'))
tryCatch(stop('fred'), finally=print('hello'))
?lm
pt(9,4373, 60, lower.tail=FALSE)
pt(.4373, 60, lower.tail=FALSE)
pt(0.9, 1, lower.tail=FALSE)
qt(0.975, 1)
qt(0.975, 60)
log(2)
log(10/9)
?log
log10(10/9)
log10(2)
log10(40)
log(40)
40*log(40)
log(7)
log2(7)
log2(40)
setwd('Desktop/Coursera/Data Science at Scale 1/datasci_course_materials/assignment3/')
list.files()
setwd('solutions/')
dir()
library(jsonlite)
data <- fromJSON('friend_count.json')
library(RJSONIO)
docu <- fromJSON('friend_count.json')
docu
lines <- readLines('friend_count.json')
lines
df <- as.data.frame(t(sapply(lines,fromJSON)))
df
df <- as.data.frame((sapply(lines,fromJSON))
)
df
